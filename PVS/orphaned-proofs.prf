("rational_expressions" rational_expressions vars_TCC2 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC3 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC4 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC5 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC6 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC7 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC8 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions vars_TCC9 "" (termination-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC1 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC2 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC11 0 (eval_TCC11-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC10 0 (eval_TCC10-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC9 0 (eval_TCC9-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC8 0 (eval_TCC8-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC7 0 (eval_TCC7-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC6 0 (eval_TCC6-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC5 0 (eval_TCC5-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC4 0 (eval_TCC4-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC3 0 (eval_TCC3-1 nil 3701099612 ("" (subtype-tcc) nil nil) nil shostak))("rational_expressions" rational_expressions eval_TCC2 0 (eval_TCC2-1 nil 3701099612 ("" (tcc)) ((vars def-decl "finite_set[variable]" rational_expressions nil) (member const-decl "bool" sets nil)) nil))("real_transition_matrices" real_transition_matrices is_stochastic_row?_TCC1 0 (is_stochastic_row?_TCC1-1 nil 3701186057 ("" (subtype-tcc) nil nil) ((member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil) (subset_is_partial_order name-judgement "(partial_order?[set[T]])" sets_lemmas nil)) nil))("real_transition_matrices" real_transition_matrices sum_TCC5 0 (sum_TCC5-1 nil 3701186057 ("" (termination-tcc) (("" (grind) (("" (lemma "card_remove" ("x" "choose(S!1)" "S" "S!1")) (("" (grind) (("" (grind) (("" (rewrite-lemma "eq_to_ineq" ("x" "card(remove(choose(S!1), S!1))" "y" "card(S!1)" "z" "1") -1) (("" (rewrite-lemma "eq_to_ineq" ("x" "card(remove(choose(S!1), S!1))" "y" "card(S!1)" "z" "1") -) (("" (lemma "eq_to_ineq" ("x" "card(remove(choose(S!1), S!1))" "y" "card(S!1)" "z" "1")) (("" (split -1) (("1" (postpone) nil nil) ("2" (postpone) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil real_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (S_ const-decl "finite_set[state]" real_transition_matrices nil) (injective? const-decl "bool" functions nil) (subset_is_partial_order name-judgement "(partial_order?[set[T]])" sets_lemmas nil) (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil) (rest const-decl "set" sets nil) (/= const-decl "boolean" notequal nil) (remove const-decl "set" sets nil) (subset? const-decl "bool" sets nil) (restrict const-decl "R" restrict nil)) nil))("real_transition_matrices" real_transition_matrices sum_TCC4 0 (sum_TCC4-1 nil 3701186057 ("" (subtype-tcc) (("" (typepred "S!1") (("" (grind) nil nil)) nil)) nil) ((remove const-decl "set" sets nil) (/= const-decl "boolean" notequal nil) (rest const-decl "set" sets nil) (finite_remove application-judgement "finite_set" finite_sets nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (finite_rest application-judgement "finite_set" finite_sets nil) (subset_is_partial_order name-judgement "(partial_order?[set[T]])" sets_lemmas nil) (injective? const-decl "bool" functions nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil real_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (S_ const-decl "finite_set[state]" real_transition_matrices nil) (subset? const-decl "bool" sets nil) (empty? const-decl "bool" sets nil) (member const-decl "bool" sets nil)) nil))("real_transition_matrices" real_transition_matrices sum_TCC3 0 (sum_TCC3-1 nil 3701186057 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil real_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (subset? const-decl "bool" sets nil) (S_ const-decl "finite_set[state]" real_transition_matrices nil) (subset_is_partial_order name-judgement "(partial_order?[set[T]])" sets_lemmas nil) (injective? const-decl "bool" functions nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (>= const-decl "bool" reals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (nonempty? const-decl "bool" sets nil) (choose const-decl "(p)" sets nil) (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)) nil))("real_transition_matrices" real_transition_matrices sum_TCC2 0 (sum_TCC2-1 nil 3701186057 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil real_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (subset? const-decl "bool" sets nil) (S_ const-decl "finite_set[state]" real_transition_matrices nil) (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil) (nonempty? const-decl "bool" sets nil)) nil))("real_transition_matrices" real_transition_matrices sum_TCC1 0 (sum_TCC1-1 nil 3701186057 ("" (well-founded-tcc) nil nil) nil nil))("rational_expressions" rational_expressions eval_TCC3 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC4 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC5 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC6 "" (subtype-tcc) nil nil)("rational_expressions" rational_expressions eval_TCC7 "" (subtype-tcc) nil nil)("parametric_transition_matrices" parametric_transition_matrices IMP_transition_matrices_TCC1 0 (IMP_transition_matrices_TCC1-1 nil 3701270175 ("" (use "zero_sum_identity") (("" (grind) nil nil)) nil) ((identity? const-decl "bool" operator_defs nil) (+ const-decl "rat_expr" rational_expressions nil) (zero const-decl "rat_expr" rational_expressions nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (zero_sum_identity formula-decl nil rational_expressions nil)) nil))("parametric_transition_matrices" parametric_transition_matrices IMP_transition_matrices_TCC2 0 (IMP_transition_matrices_TCC2-1 nil 3701270175 ("" (use* "sum_associative" "sum_commutative") (("" (grind) nil nil)) nil) ((+ const-decl "rat_expr" rational_expressions nil) (commutative? const-decl "bool" operator_defs nil) (associative? const-decl "bool" operator_defs nil) (sum_commutative formula-decl nil rational_expressions nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (sum_associative formula-decl nil rational_expressions nil)) nil))("parametric_transition_matrices" parametric_transition_matrices wf_evaluation_TCC2 0 (wf_evaluation_TCC2-1 nil 3701284629 ("" (subtype-tcc) nil nil) nil nil))("parametric_transition_matrices" parametric_transition_matrices eval_matrix_stochastic 0 (eval_matrix_stochastic-1 nil 3701284639 ("" (skeep) (("" (typepred "u") (("" (expand "is_stochastic_matrix?") (("" (expand "wf_evaluation") (("" (expand "wf_evaluation") (("" (expand "eval_matrix") (("" (skeep) (("" (inst - "s") nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) (nil (evaluation type-eq-decl nil rational_expressions nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (parametric_transition_matrix type-eq-decl nil parametric_transition_matrices nil) (transition_row type-eq-decl nil transition_matrices nil) (sum adt-constructor-decl "[[rat_expr, rat_expr] -> (sum?)]" rational_expressions nil) (sum? adt-recognizer-decl "[rat_expr -> boolean]" rational_expressions nil) (zero const-decl "rat_expr" rational_expressions nil) (rat_expr type-decl nil rational_expressions nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (S_ const-decl "finite_set[state]" parametric_transition_matrices nil) (finite_set type-eq-decl nil finite_sets nil) (is_finite const-decl "bool" finite_sets nil) (set type-eq-decl nil sets nil) (state formal-nonempty-type-decl nil parametric_transition_matrices nil) (NOT const-decl "[bool -> bool]" booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (boolean nonempty-type-decl nil booleans nil) (eval_matrix const-decl "real_transition_matrix(S_)" parametric_transition_matrices nil) (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil) (<= const-decl "bool" reals nil) (probability nonempty-type-eq-decl nil real_transition_matrices nil) (numfield nonempty-type-eq-decl nil number_fields nil) (restrict const-decl "R" restrict nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (S_ const-decl "finite_set[state]" transition_matrices nil) nil (is_stochastic_matrix? const-decl "boolean" real_transition_matrices nil)) shostak))("parametric_transition_matrices" parametric_transition_matrices eval_matrix_stochastic_TCC1 0 (eval_matrix_stochastic_TCC1-1 nil 3701284629 ("" (subtype-tcc) nil nil) nil nil))("rational_expressions" rational_expressions eval_TCC10 0 (eval_TCC10-1 nil 3701265702 ("" (subtype-tcc) nil nil) nil nil))("rational_expressions" rational_expressions eval_TCC9 0 (eval_TCC9-1 nil 3701265702 ("" (termination-tcc) nil nil) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) nil))("rational_expressions" rational_expressions eval_TCC8 0 (eval_TCC8-1 nil 3701099612 ("" (subtype-tcc) (("" (grind) nil nil)) nil) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC7 0 (eval_TCC7-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC6 0 (eval_TCC6-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC5 0 (eval_TCC5-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC4 0 (eval_TCC4-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC3 0 (eval_TCC3-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) shostak))("rational_expressions" rational_expressions eval_TCC2 0 (eval_TCC2-1 nil 3701099612 ("" (tcc)) ((<< adt-def-decl "(strict_well_founded?[rat_expr])" rational_expressions nil)) nil))("parametric_transition_matrices" parametric_transition_matrices eval_matrix_TCC3 0 (eval_matrix_TCC3-1 nil 3701285258 ("" (skeep) (("" (typepred "u") (("" (expand "wf_evaluation") (("" (expand "wf_evaluation") (("" (expand "is_stochastic_matrix?") (("" (skeep) (("" (inst - "s_1") (("" (flatten -) nil nil)) nil)) nil)) nil)) nil)) nil)) nil)) nil) ((wf_evaluation const-decl "boolean" parametric_transition_matrices nil) (evaluation type-eq-decl nil rational_expressions nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (parametric_transition_matrix type-eq-decl nil parametric_transition_matrices nil) (transition_row type-eq-decl nil transition_matrices nil) (sum adt-constructor-decl "[[rat_expr, rat_expr] -> (sum?)]" rational_expressions nil) (sum? adt-recognizer-decl "[rat_expr -> boolean]" rational_expressions nil) (zero const-decl "rat_expr" rational_expressions nil) (rat_expr type-decl nil rational_expressions nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (S_ const-decl "finite_set[state]" parametric_transition_matrices nil) (finite_set type-eq-decl nil finite_sets nil) (is_finite const-decl "bool" finite_sets nil) (set type-eq-decl nil sets nil) (state formal-nonempty-type-decl nil parametric_transition_matrices nil) (NOT const-decl "[bool -> bool]" booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (boolean nonempty-type-decl nil booleans nil) (wf_evaluation const-decl "boolean" parametric_transition_matrices nil) (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil) (<= const-decl "bool" reals nil) (probability nonempty-type-eq-decl nil real_transition_matrices nil) (numfield nonempty-type-eq-decl nil number_fields nil) (restrict const-decl "R" restrict nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (S_ const-decl "finite_set[state]" transition_matrices nil) (is_stochastic_matrix? const-decl "boolean" real_transition_matrices nil)) nil))("parametric_transition_matrices" parametric_transition_matrices eval_matrix_TCC2 0 (eval_matrix_TCC2-1 nil 3701285258 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil parametric_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (S_ const-decl "finite_set[state]" parametric_transition_matrices nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (rat_expr type-decl nil rational_expressions nil) (zero const-decl "rat_expr" rational_expressions nil) (sum? adt-recognizer-decl "[rat_expr -> boolean]" rational_expressions nil) (sum adt-constructor-decl "[[rat_expr, rat_expr] -> (sum?)]" rational_expressions nil) (transition_row type-eq-decl nil transition_matrices nil) (parametric_transition_matrix type-eq-decl nil parametric_transition_matrices nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (evaluation type-eq-decl nil rational_expressions nil) (wf_evaluation const-decl "boolean" parametric_transition_matrices nil) (finite_restrict application-judgement "finite_set[S]" restrict_set_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) (wf_evaluation const-decl "boolean" parametric_transition_matrices nil) (is_stochastic_row? const-decl "boolean" real_transition_matrices nil) (sum const-decl "sum_result" transition_matrices nil) (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil) (<= const-decl "bool" reals nil) (probability nonempty-type-eq-decl nil real_transition_matrices nil) (numfield nonempty-type-eq-decl nil number_fields nil) (restrict const-decl "R" restrict nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (eval_row const-decl "real_transition_row(S_)" parametric_transition_matrices nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (pre_wf_evaluation const-decl "boolean" parametric_transition_matrices nil)) nil))("parametric_transition_matrices" parametric_transition_matrices eval_matrix_TCC1 0 (eval_matrix_TCC1-1 nil 3701285085 ("" (subtype-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil parametric_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (S_ const-decl "finite_set[state]" parametric_transition_matrices nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (rat_expr type-decl nil rational_expressions nil) (zero const-decl "rat_expr" rational_expressions nil) (sum? adt-recognizer-decl "[rat_expr -> boolean]" rational_expressions nil) (sum adt-constructor-decl "[[rat_expr, rat_expr] -> (sum?)]" rational_expressions nil) (transition_row type-eq-decl nil transition_matrices nil) (parametric_transition_matrix type-eq-decl nil parametric_transition_matrices nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (evaluation type-eq-decl nil rational_expressions nil) nil (finite_restrict application-judgement "finite_set[S]" restrict_set_props nil) (real_le_is_total_order name-judgement "(total_order?[real])" real_props nil) nil (is_stochastic_row? const-decl "boolean" real_transition_matrices nil) (sum const-decl "sum_result" transition_matrices nil) (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil) (<= const-decl "bool" reals nil) (probability nonempty-type-eq-decl nil real_transition_matrices nil) (numfield nonempty-type-eq-decl nil number_fields nil) (restrict const-decl "R" restrict nil) (+ const-decl "[numfield, numfield -> numfield]" number_fields nil) (eval_row const-decl "real_transition_row(S_)" parametric_transition_matrices nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (pre_wf_evaluation const-decl "boolean" parametric_transition_matrices nil)) nil))("parametric_transition_matrices" parametric_transition_matrices wf_evaluation_TCC1 0 (wf_evaluation_TCC1-1 nil 3701284629 ("" (subtype-tcc) nil nil) nil nil))("parametric_transition_matrices" parametric_transition_matrices expr_judgement_TCC1 0 (expr_judgement_TCC1-1 nil 3701284629 ("" (judgement-tcc) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (state formal-nonempty-type-decl nil parametric_transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (S_ const-decl "finite_set[state]" parametric_transition_matrices nil) (variable formal-nonempty-type-decl nil parametric_transition_matrices nil) (rat_expr type-decl nil rational_expressions nil) (parametric_transition_row type-eq-decl nil parametric_transition_matrices nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (evaluation type-eq-decl nil rational_expressions nil) (pre_wf_evaluation const-decl "boolean" parametric_transition_matrices nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil)) nil))("transition_matrices" transition_matrices image_TCC3 0 (image_TCC3-1 nil 3701552481 ("" (assuming-tcc) (("1" (rewrite "union_commutative") nil nil) ("2" (rewrite "union_associative") nil nil)) nil) ((union_associative formula-decl nil sets_lemmas nil) (union_commutative formula-decl nil sets_lemmas nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (rational nonempty-type-from-decl nil rationals nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (int nonempty-type-eq-decl nil integers nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (finite_union application-judgement "finite_set" finite_sets nil) (injective? const-decl "bool" functions nil) (boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (V formal-type-decl nil transition_matrices nil) (set type-eq-decl nil sets nil) (is_finite const-decl "bool" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (commutative? const-decl "bool" operator_defs nil) (associative? const-decl "bool" operator_defs nil) (restrict const-decl "R" restrict nil)) nil))("transition_matrices" transition_matrices image_TCC2 0 (image_TCC2-1 nil 3701552481 ("" (skeep) (("" (grind) (("1" (rewrite "union_commutative") (("1" (rewrite "union_empty") nil nil)) nil) ("2" (rewrite "union_empty") nil nil)) nil)) nil) ((restrict const-decl "R" restrict nil) (identity? const-decl "bool" operator_defs nil) (finite_emptyset name-judgement "finite_set" finite_sets nil) (finite_set type-eq-decl nil finite_sets nil) (is_finite const-decl "bool" finite_sets nil) (set type-eq-decl nil sets nil) (V formal-type-decl nil transition_matrices nil) (NOT const-decl "[bool -> bool]" booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (boolean nonempty-type-decl nil booleans nil) (injective? const-decl "bool" functions nil) (finite_union application-judgement "finite_set" finite_sets nil) (nat nonempty-type-eq-decl nil naturalnumbers nil) (int nonempty-type-eq-decl nil integers nil) (integer_pred const-decl "[rational -> boolean]" integers nil) (rational nonempty-type-from-decl nil rationals nil) (rational_pred const-decl "[real -> boolean]" rationals nil) (>= const-decl "bool" reals nil) (real nonempty-type-from-decl nil reals nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (number_field nonempty-type-from-decl nil number_fields nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number nonempty-type-decl nil numbers nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (union_empty formula-decl nil sets_lemmas nil) (union_commutative formula-decl nil sets_lemmas nil) (emptyset const-decl "set" sets nil)) nil))("transition_matrices" transition_matrices image_TCC3 0 (image_TCC3-1 nil 3701558467 ("" (assuming-tcc) nil nil) nil nil))("transition_matrices" transition_matrices image_TCC2 0 (image_TCC2-1 nil 3701558467 ("" (assuming-tcc) nil nil) nil nil))("real_transition_matrices" real_transition_matrices eq_to_ineq 0 (eq_to_ineq-1 nil 3701188448 ("" (grind) nil nil) ((boolean nonempty-type-decl nil booleans nil) (bool nonempty-type-eq-decl nil booleans nil) (NOT const-decl "[bool -> bool]" booleans nil) (number nonempty-type-decl nil numbers nil) (number_field_pred const-decl "[number -> boolean]" number_fields nil) (number_field nonempty-type-from-decl nil number_fields nil) (real_pred const-decl "[number_field -> boolean]" reals nil) (real nonempty-type-from-decl nil reals nil) (>= const-decl "bool" reals nil) (nonneg_real nonempty-type-eq-decl nil real_types nil) (> const-decl "bool" reals nil) (posreal nonempty-type-eq-decl nil real_types nil) (real_minus_real_is_real application-judgement "real" reals nil) (real_ge_is_total_order name-judgement "(total_order?[real])" real_props nil) (real_gt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil) (real_lt_is_strict_total_order name-judgement "(strict_total_order?[real])" real_props nil)) shostak))("transition_matrices" transition_matrices image_injection 0 (image_injection-1 nil 3701555413 ("" (skolem * ("m" "r") :skolem-typepreds? T) (("" (postpone) nil nil)) nil) nil shostak))("annotative_reliability_models" annotative_reliability_models switch_row_sums_1_TCC2 0 (switch_row_sums_1_TCC2-1 nil 3701698097 ("" (assuming-tcc) nil nil) ((restrict const-decl "R" restrict nil) (associative? const-decl "bool" operator_defs nil) (commutative? const-decl "bool" operator_defs nil) (real_plus_real_is_real application-judgement "real" reals nil)) nil))("annotative_reliability_models" annotative_reliability_models switch_row_sums_1_TCC1 0 (switch_row_sums_1_TCC1-1 nil 3701698097 ("" (assuming-tcc) nil nil) ((restrict const-decl "R" restrict nil) (identity? const-decl "bool" operator_defs nil)) nil))("annotative_reliability_models" annotative_reliability_models IMP_finite_sets_sum_TCC2 0 (IMP_finite_sets_sum_TCC2-1 nil 3701702180 ("" (assuming-tcc) nil nil) ((real_plus_real_is_real application-judgement "real" reals nil) (associative? const-decl "bool" operator_defs nil) (commutative? const-decl "bool" operator_defs nil) (restrict const-decl "R" restrict nil)) nil))("annotative_reliability_models" annotative_reliability_models IMP_finite_sets_sum_TCC1 0 (IMP_finite_sets_sum_TCC1-1 nil 3701702180 ("" (assuming-tcc) nil nil) ((restrict const-decl "R" restrict nil) (identity? const-decl "bool" operator_defs nil)) nil))